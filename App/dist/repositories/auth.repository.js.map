{"version":3,"sources":["../../src/repositories/auth.repository.ts"],"sourcesContent":["import { hash, compare } from 'bcrypt';\nimport { sign } from 'jsonwebtoken';\nimport { EntityRepository } from 'typeorm';\nimport { SECRET_KEY } from '@config';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { UserEntity } from '@entities/users.entity';\nimport { HttpException } from '@exceptions/HttpException';\nimport { DataStoredInToken, TokenData } from '@interfaces/auth.interface';\nimport { User } from '@interfaces/users.interface';\nimport { isEmpty } from '@utils/util';\n\n@EntityRepository(UserEntity)\nexport default class AuthRepository {\n  public async userSignUp(userData: CreateUserDto): Promise<User> {\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\n\n    const findUser: User = await UserEntity.findOne({ where: { email: userData.email } });\n    if (findUser) throw new HttpException(409, `This email ${userData.email} already exists`);\n\n    const hashedPassword = await hash(userData.password, 10);\n    const createUserData: User = await UserEntity.create({ ...userData, password: hashedPassword }).save();\n\n    return createUserData;\n  }\n\n  public async userLogIn(userData: CreateUserDto): Promise<{ cookie: string; findUser: User }> {\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\n\n    const findUser: User = await UserEntity.findOne({ where: { email: userData.email } });\n    if (!findUser) throw new HttpException(409, `This email ${userData.email} was not found`);\n\n    const isPasswordMatching: boolean = await compare(userData.password, findUser.password);\n    if (!isPasswordMatching) throw new HttpException(409, 'Password is not matching');\n\n    const tokenData = this.createToken(findUser);\n    const cookie = this.createCookie(tokenData);\n\n    return { cookie, findUser };\n  }\n\n  public async userLogOut(userId: number): Promise<User> {\n    if (isEmpty(userId)) throw new HttpException(400, 'userId is empty');\n\n    const findUser: User = await UserEntity.findOne({ where: { id: userId } });\n    if (!findUser) throw new HttpException(409, \"User doesn't exist\");\n\n    return findUser;\n  }\n\n  public createToken(user: User): TokenData {\n    const dataStoredInToken: DataStoredInToken = { id: user.id };\n    const secretKey: string = SECRET_KEY;\n    const expiresIn: number = 60 * 60;\n\n    return { expiresIn, token: sign(dataStoredInToken, secretKey, { expiresIn }) };\n  }\n\n  public createCookie(tokenData: TokenData): string {\n    return `Authorization=${tokenData.token}; HttpOnly; Max-Age=${tokenData.expiresIn};`;\n  }\n}\n"],"names":["AuthRepository","userSignUp","userData","isEmpty","HttpException","findUser","UserEntity","findOne","where","email","hashedPassword","hash","password","createUserData","create","save","userLogIn","isPasswordMatching","compare","tokenData","createToken","cookie","createCookie","userLogOut","userId","id","user","dataStoredInToken","secretKey","SECRET_KEY","expiresIn","token","sign","EntityRepository"],"mappings":";;;;;;aAYqBA;;wBAZS;8BACT;yBACY;wBACN;6BAEA;+BACG;sBAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGHA,iBAAN;IACb,MAAaC,WAAWC,QAAuB,EAAiB;QAC9D,IAAIC,IAAAA,aAAO,EAACD,WAAW,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAEzE,MAAMC,WAAiB,MAAMC,uBAAU,CAACC,OAAO,CAAC;YAAEC,OAAO;gBAAEC,OAAOP,SAASO,KAAK;YAAC;QAAE;QACnF,IAAIJ,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEF,SAASO,KAAK,CAAC,eAAe,CAAC,EAAE;QAE1F,MAAMC,iBAAiB,MAAMC,IAAAA,YAAI,EAACT,SAASU,QAAQ,EAAE;QACrD,MAAMC,iBAAuB,MAAMP,uBAAU,CAACQ,MAAM,CAAC,qCAAKZ;YAAUU,UAAUF;YAAkBK,IAAI;QAEpG,OAAOF;IACT;IAEA,MAAaG,UAAUd,QAAuB,EAA+C;QAC3F,IAAIC,IAAAA,aAAO,EAACD,WAAW,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAEzE,MAAMC,WAAiB,MAAMC,uBAAU,CAACC,OAAO,CAAC;YAAEC,OAAO;gBAAEC,OAAOP,SAASO,KAAK;YAAC;QAAE;QACnF,IAAI,CAACJ,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEF,SAASO,KAAK,CAAC,cAAc,CAAC,EAAE;QAE1F,MAAMQ,qBAA8B,MAAMC,IAAAA,eAAO,EAAChB,SAASU,QAAQ,EAAEP,SAASO,QAAQ;QACtF,IAAI,CAACK,oBAAoB,MAAM,IAAIb,4BAAa,CAAC,KAAK,4BAA4B;QAElF,MAAMe,YAAY,IAAI,CAACC,WAAW,CAACf;QACnC,MAAMgB,SAAS,IAAI,CAACC,YAAY,CAACH;QAEjC,OAAO;YAAEE;YAAQhB;QAAS;IAC5B;IAEA,MAAakB,WAAWC,MAAc,EAAiB;QACrD,IAAIrB,IAAAA,aAAO,EAACqB,SAAS,MAAM,IAAIpB,4BAAa,CAAC,KAAK,mBAAmB;QAErE,MAAMC,WAAiB,MAAMC,uBAAU,CAACC,OAAO,CAAC;YAAEC,OAAO;gBAAEiB,IAAID;YAAO;QAAE;QACxE,IAAI,CAACnB,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,sBAAsB;QAElE,OAAOC;IACT;IAEOe,YAAYM,IAAU,EAAa;QACxC,MAAMC,oBAAuC;YAAEF,IAAIC,KAAKD,EAAE;QAAC;QAC3D,MAAMG,YAAoBC,kBAAU;QACpC,MAAMC,YAAoB,KAAK;QAE/B,OAAO;YAAEA;YAAWC,OAAOC,IAAAA,kBAAI,EAACL,mBAAmBC,WAAW;gBAAEE;YAAU;QAAG;IAC/E;IAEOR,aAAaH,SAAoB,EAAU;QAChD,OAAO,CAAC,cAAc,EAAEA,UAAUY,KAAK,CAAC,oBAAoB,EAAEZ,UAAUW,SAAS,CAAC,CAAC,CAAC;IACtF;AACF;AAhDqB9B;IADpBiC,IAAAA,yBAAgB,EAAC3B,uBAAU;GACPN"}